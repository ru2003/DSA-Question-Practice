ARRAYS – Service-Based / Startup Level
Basic / Easy

Find the sum of all elements in an array.

Find the maximum and minimum element.

Count even and odd numbers.

Print all negative numbers in the array.

Find the second largest element.

Check if an array is sorted in ascending/descending order.

Reverse an array.

Find the frequency of each element.

Check if a number exists in an array.

Swap two arrays without using a third variable.

Intermediate

Move all zeros to the end of the array.

Find the “leader” elements (elements greater than all elements to their right).

Find the union and intersection of two arrays.

Find the majority element (> n/2 occurrences).

Find subarray with maximum sum (Kadane’s algorithm).

Rotate array by k positions.

Count pairs with a given sum.

Find duplicates in an array.

Replace each element with the product of all other elements (without using division).

Find missing number in a sequence (1 to n).

Advanced / Startup Medium

Find the maximum difference between two elements such that larger element comes after smaller.

Trapping rain water problem (basic prefix-suffix approach).

Find subarray with given sum (positive numbers).

Sort an array of 0s, 1s, 2s (Dutch National Flag).

Find the longest consecutive sequence.

STRINGS – Service-Based / Startup Level
Basic / Easy

Reverse a string.

Check if a string is palindrome.

Count vowels and consonants.

Count words in a sentence.

Remove duplicates from a string.

Find first non-repeating character.

Check if two strings are anagrams.

Convert string to uppercase/lowercase.

Check if a string contains only digits or letters.

Print all substrings of a string.

Intermediate

Longest substring without repeating characters.

Count occurrences of each character.

Compress a string (like “aaabbc” → “a3b2c1”).

Reverse words in a sentence.

Check if a string is a rotation of another.

Remove all vowels from a string.

Replace spaces with “%20” (URL encoding).

Count palindromic substrings.

Implement basic strstr() function.

Convert string to integer without using built-in functions.

Advanced / Startup Medium

Longest palindromic substring.

Minimum number of insertions to make a string palindrome.

Decode strings like “3[a2[c]]” → “accaccacc”.

Count occurrences of a substring in a string.

Check if two strings are anagrams using a hash table (optimized).

Check if a string is a valid shuffle of two other strings.

Find all permutations of a string.

Remove duplicate letters while maintaining order.