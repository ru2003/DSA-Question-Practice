What is a linked list and how is it different from an array?

What are the advantages and disadvantages of using a linked list?

What is the difference between singly, doubly, and circular linked lists?

What is a node in a linked list?

How do you find the length of a linked list?

How to insert a new node at the beginning / end / middle of a linked list?

How to delete a node from a linked list?

What happens when you delete the head or last node?

How do you reverse a linked list? (explain logic â€” iterative or recursive)

How to detect a loop in a linked list? (Floydâ€™s Cycle Detection Algorithm)

How to find the middle element of a linked list in one pass?

How to check if two linked lists intersect?

Difference between Stack and Linked List implementation?

How memory is allocated for linked list nodes?

Can you implement a queue or stack using a linked list?


| Question                                                                         | Concept Tested                       |
| -------------------------------------------------------------------------------- | ------------------------------------ |
| If a linked list has N nodes, how many `next` pointers will it have?             | N (each node has one `next` pointer) |
| In a singly linked list, can we traverse backward?                               | No                                   |
| In a doubly linked list, how many pointers are in each node?                     | 2 (`next` and `prev`)                |
| What is the time complexity to access the k-th element?                          | O(k)                                 |
| Time complexity of inserting at the beginning of a linked list?                  | O(1)                                 |
| Time complexity of inserting at the end (without tail pointer)?                  | O(n)                                 |
| Is random access possible in a linked list?                                      | No                                   |
| What is the space complexity of a linked list node compared to an array element? | Higher (extra pointer space)         |


ðŸ§¾ Time & Space Complexities Summary
Operation	        Singly LL         	Doubly LL
Traversal	           O(n)                	O(n)
Insertion at beginning  	O(1)    	O(1)
Insertion at end (no tail)	O(n)	    O(n)
Deletion at beginning	   O(1)     	O(1)
Deletion at end	O(n)	                O(1) 
Search	O(n)	                          O(n)